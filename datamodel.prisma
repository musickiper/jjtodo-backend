type Task {
  id: ID! @id
  title: String!
  desc: String @default(value:"")
  dueDate: DateTime
  user: User!
  status: StatusOption
  category: Category
  subTasks: [SubTask!]! @relation(onDelete: CASCADE)
  files: [File!]! @relation(name: "TaskFileRel", onDelete: CASCADE)
}

enum StatusOption {
  PROGRESS,
  PENDING,
  COMPLETE
}

type SubTask {
  id: ID! @id
  text: String!
  done: Boolean @default(value: false)
  parentTask: Task!
}

type User {
  id: ID! @id
  email: String! @unique
  username: String! @unique
  loginSecret: String @default(value:"")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  tasks: [Task!]!
}

type Category {
  id: ID! @id
  text: String! @unique
  tasks: [Task!]!
}

type File {
  id: ID! @id
  url: String!
  task: Task! @relation(name: "TaskFileRel")
}